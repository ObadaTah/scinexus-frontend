import { Avatar, Button } from "@mui/joy";
import { useEffect, useState } from "react";
import { CsvToHtmlTable } from "react-csv-to-table";
import { useLocation } from "react-router-dom";

import { Box, Grid, Paper, Typography } from "@mui/material";
import { pdfjs } from "react-pdf";
import { Container } from "react-bootstrap";
pdfjs.GlobalWorkerOptions.workerSrc = `../../../src/pdf.worker.min.mjs`;
function getTimeDifference(dateString) {
    const date = new Date(dateString);
    const currentDate = new Date();
    const timeDifference = currentDate - date;
    const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

    if (daysDifference === 0) {
        return "Today";
    } else if (daysDifference === 1) {
        return "Yesterday";
    } else {
        return `${daysDifference} Days Ago`;
    }
}
function ResearchPaperPage() {
    const [numPages, setNumPages] = useState();
    const [pageNumber, setPageNumber] = useState(1);
    function onDocumentLoadSuccess({ numPages }) {
        setNumPages(numPages);
    }
    let location = useLocation();
    console.log(location.state);
    return (
        <>
            <Box sx={{ m: 4 }}>
                <Grid container>
                    <Grid item xs={9}>
                        <Typography variant="h4" component="h1" gutterBottom>
                            {location.state.title}
                        </Typography>
                        <Typography variant="subtitle1" gutterBottom>
                            {location.state.description}
                        </Typography>
                        <Typography
                            variant="body2"
                            color="textSecondary"
                            gutterBottom
                        >
                            {getTimeDifference(location.state.createDateTime)} |{" "}
                            {location.state.noOfPages} Pages |{" "}
                            {location.state.medias.length} File
                        </Typography>
                    </Grid>
                    {/* <Box item sx={{ my: 2 }}>
                        <Button variant="contained" color="primary" sx={{ mr: 2 }}>
                        Download PDF
                    </Button>
                    <Button variant="contained" color="secondary">
                        Download Full PDF Package
                    </Button>
                    </Box> */}
                    <Grid item xs={3}>
                        <Paper elevation={3} sx={{ p: 2 }}>
                            <Typography variant="h6" gutterBottom>
                                About Author
                            </Typography>
                            <Grid
                                container
                                spacing={2}
                                direction="row"
                                alignItems="center"
                                sx={{ mb: 1 }}
                            >
                                <Grid item>
                                    <Avatar
                                        src={
                                            location.state.publisher
                                                .profilePicture?.path !==
                                            "autogenerated"
                                                ? `http://localhost:8080/medias/${location.state.publisher.profilePicture?.id}/files`
                                                : location.state.publisher
                                                      .profilePicture?.fileName
                                        }
                                        alt="Author"
                                    />
                                </Grid>
                                <Grid item>
                                    <Typography variant="body1">
                                        {location.state.publisher.firstName +
                                            " " +
                                            location.state.publisher.lastName}
                                    </Typography>
                                </Grid>
                            </Grid>
                            <Typography variant="body2" color="textSecondary">
                                {location.state.publisher.bio} |
                                {location.state.publisher.position}
                            </Typography>
                            <Typography variant="body2" sx={{ mt: 1 }}>
                                Followers: 1,925 | Papers: 4
                            </Typography>
                        </Paper>
                    </Grid>
                </Grid>
                <Grid container spacing={2}>
                    <Grid item xs={12} sx={{ my: 4 }}>
                        {location.state.medias.map((media) => {
                            console.log(media);
                            if (media.type === "application/pdf") {
                                return (
                                    <Paper elevation={3} sx={{ p: 2 }}>
                                        <Typography variant="h6" gutterBottom>
                                            Original PDF
                                        </Typography>
                                        <Box
                                            sx={{
                                                width: "100%",
                                                height: " 100vh",
                                                backgroundColor: "#f0f0f0",
                                            }}
                                        >
                                            <iframe
                                                style={{
                                                    width: "100%",
                                                    height: "100%",
                                                    border: "none",
                                                }}
                                                src={`http://localhost:8080/medias/${media.id}/files`}
                                                // frameborder="0"
                                            ></iframe>
                                            {/* <Document
                                                style={{ maxWidth: "100%" }}
                                                // renderMode="none"
                                                file={`http://localhost:8080/medias/${media.id}/files`}
                                                onLoadSuccess={
                                                    onDocumentLoadSuccess
                                                }
                                            >
                                                <Page pageNumber={pageNumber} />
                                            </Document> */}
                                        </Box>
                                    </Paper>
                                );
                            }
                            if (media.type === "text/csv") {
                                const [csvData, setCsvData] = useState("");

                                fetch(
                                    `http://localhost:8080/medias/${media.id}/files`
                                )
                                    .then((response) =>
                                        response.body.getReader().read()
                                    )
                                    .then((responseText) => {
                                        setCsvData(
                                            new TextDecoder("utf-8").decode(
                                                responseText.value
                                            )
                                        );
                                    });

                                return (
                                    <>
                                        {/* <Button onAbort={load}>
                                            Load CSV Table
                                        </Button> */}
                                        <Box
                                            sx={{
                                                my: 4,
                                                border: "5px groove #b0b0af",
                                                height: " 100vh",
                                                backgroundColor: "#f0f0f0",
                                                overflow: "auto",
                                                width: "90vw",
                                            }}
                                        >
                                            <CsvToHtmlTable
                                                id="csv"
                                                data={csvData}
                                                csvDelimiter=","
                                                tableClassName="table table-striped table-hover box"
                                            />
                                        </Box>
                                    </>
                                );
                            }
                        })}
                    </Grid>
                </Grid>
            </Box>
        </>
    );
}
export default ResearchPaperPage;

// <Container>

// </Container>
